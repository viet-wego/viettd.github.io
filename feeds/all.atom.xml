<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Viet Tran</title><link href="https://viettran.me/" rel="alternate"></link><link href="https://viettran.me/feeds/all.atom.xml" rel="self"></link><id>https://viettran.me/</id><updated>2018-11-07T20:00:00+08:00</updated><entry><title>Setup replication for PostgreSQL</title><link href="https://viettran.me/setup-replication-for-postgresql.html" rel="alternate"></link><published>2018-11-07T20:00:00+08:00</published><updated>2018-11-07T20:00:00+08:00</updated><author><name>Viet Tran</name></author><id>tag:viettran.me,2018-11-07:/setup-replication-for-postgresql.html</id><summary type="html">&lt;p&gt;How to setup replication for PostgreSQL using hot stanby.&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you want to understand about high availability,load balancing and replication in PostgreSQL, please read the official documentation in the &lt;a href="#References"&gt;References&lt;/a&gt;. In this tutorial, I will show you how to set up a replication server for PostgreSQL using Hot Stanby mode.&lt;/p&gt;
&lt;h2&gt;Install PostgreSQL&lt;/h2&gt;
&lt;p&gt;You will need 2 instances of PostgreSQL. For detail please see &lt;a href="https://viettran.me/install-n-configure-postgresql-on-ubuntu.html"&gt;Install &amp;amp; configure PostgreSQL on Ubuntu&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Prepare Master Server&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a user for replication &amp;amp; allow traffic for replication server&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -u postgres createuser -U postgres rep_user -P -c 5 --replication
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Replace &lt;code&gt;rep_user&lt;/code&gt; with your replication user.
Replace &lt;code&gt;5&lt;/code&gt; with max connections can be used for replication.
Your will need to provide a powerful password for this user at the command prompt.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Edit &lt;strong&gt;pg_hba.conf&lt;/strong&gt; file. By default, you can find it at &lt;code&gt;/etc/postgresql/[your_postgresql_version]/main/pg_hba.conf&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    sudo vi /etc/postgresql/10/main/pg_hba.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Allow replication connections&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    # Allow replication connections for user rep_user from 10.240.0.0/16 with md5 password
    host    replication     rep_user             10.240.0.0/16           md5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you want to only allow from 1 specific IP, can use CIDR &lt;code&gt;[your_replication_server_ip]/32&lt;/code&gt;. E.g: 10.240.0.10/32&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Configurate WAL (Write Ahead Log)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create a directory to store archive file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p /data/postgresql/10/main/archive
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit &lt;strong&gt;postgresql.conf&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vi /etc/postgresql/10/main/postgresql.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;PostgreSQL &amp;gt;= 9.6&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wal_level = replica
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PostgreSQL &amp;lt;= 9.5&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wal_level = hot_standby
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enable archive mode&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;archive_mode = on
archive_command = &amp;#39;test ! -f /data/postgresql/10/main/archive/%f &amp;amp;amp;&amp;amp;amp; cp %p /data/postgresql/10/main/archive/%f&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Replace &lt;strong&gt;/data/postgresql/10/main/archive&lt;/strong&gt; with the directory you created above.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart service to make the changes effective&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo service postgresql restart
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Prepare Replication Server&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Stop service&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo service postgresql stop
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Initialize data&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Rename old data directory&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    # replace /data/postgresql/10/main with your postgresql data directory (configurated in postgresql.conf)
    sudo mv /data/postgresql/10/main /data/postgresql/10/main_old
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run backup utility to copy data from Master&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    sudo -u postgres pg_basebackup -h  -D /data/postgresql/10/main -U rep_user -v -P -X stream
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Replace &lt;strong&gt;/data/postgresql/10/main&lt;/strong&gt; with your data directory &amp;amp; &lt;strong&gt;rep_user&lt;/strong&gt; with your replication user above. You will need to provide password for replication user.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configurate replication&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Turn on Hot Standby&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vi  /etc/postgresql/10/main/postgresql.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Uncomment this line&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hot_standby = on
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create recovery file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo cp /usr/share/postgresql/10/recovery.conf.sample /data/postgresql/10/main/recovery.conf
sudo vi /data/postgresql/10/main/recovery.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Configurate stanby&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;standby_mode = on
primary_conninfo = &amp;#39;host=[your_master_host] port=[your_master_port] user=[your_replication_user] password=[your_replication_user_password]&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make sure user &lt;strong&gt;postgres&lt;/strong&gt; has correct permission on postgresql data directory&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo chmod -R 0700 /data/postgresql
sudo chown -R postgres:postgres /data/postgresql
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Start service&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo service postgresql start
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now your &lt;strong&gt;Replication Server&lt;/strong&gt; can serve read-only query. If you want to promote it to &lt;strong&gt;Master&lt;/strong&gt; can use this command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    # replace 10 with your postgresql version
    sudo -u postgres pg_ctlcluster 10 main promote
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://cloud.google.com/community/tutorials/setting-up-postgres-hot-standby"&gt;How to Set Up PostgreSQL for High Availability and Replication with Hot Standby&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.postgresql.org/docs/10/high-availability.html"&gt;High Availability, Load Balancing, and Replication (PostgreSQL's official documentation)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="postgresql"></category><category term="ubuntu"></category><category term="linux"></category><category term="devops"></category><category term="replication"></category><category term="stanby"></category><category term="high availability"></category><category term="load balancing"></category></entry><entry><title>Install &amp; configure PostgreSQL on Ubuntu</title><link href="https://viettran.me/install-n-configure-postgresql-on-ubuntu.html" rel="alternate"></link><published>2018-10-08T13:40:00+08:00</published><updated>2018-10-08T18:59:00+08:00</updated><author><name>Viet Tran</name></author><id>tag:viettran.me,2018-10-08:/install-n-configure-postgresql-on-ubuntu.html</id><summary type="html">&lt;p&gt;How to install &amp;amp; configure PostgreSQL on Ubuntu.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;This tutorial is using &lt;a href="https://en.wikipedia.org/wiki/Vi"&gt;vi&lt;/a&gt; editor. You can use any editor you want.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Add PostgreSQL repository to &lt;strong&gt;apt&lt;/strong&gt; package list&lt;/h3&gt;
&lt;p&gt;Ubuntu comes with a default version of PostgreSQL. If we need to install a specific version, we have to add the PosgreSQL repository to our package list.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Edit this file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vi /etc/apt/sources.list.d/pgdg.list
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add this line (replace &lt;code&gt;xenial&lt;/code&gt; with your Ubuntu code name, I use 16.04):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://apt.postgresql.org/pub/repos/apt/&lt;/span&gt; &lt;span class="kp"&gt;xenial-pgdg&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Import the repository signing key, and update the package list:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
sudo apt-get update
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Install PostgreSQL&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Our current system requires PostgreSQL 9.5. So I will install version &lt;strong&gt;9.5&lt;/strong&gt;. Replace it with your choice:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install -y postgresql-client-9.5 postgresql-9.5 postgresql-contrib-9.5 postgresql-server-dev-9.5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;From version &lt;strong&gt;10&lt;/strong&gt; you don't have to install &lt;strong&gt;postgresql-contrib-xx&lt;/strong&gt; because it is already added to package &lt;strong&gt;postgresql-xx&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PostgreSQL created a default user, named &lt;strong&gt;postgres&lt;/strong&gt;, during installation. This user doesn't yet have a password, so you'll need to set one.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;strong&gt;PSQL&lt;/strong&gt; as user &lt;strong&gt;postgres&lt;/strong&gt;, instead of &lt;strong&gt;root&lt;/strong&gt;, accesssing the database named &lt;strong&gt;postgres&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -u postgres psql postgres
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You should see the PSQL command prompt, which looks like this: &lt;code&gt;postgres=#&lt;/code&gt;.
Set the password with this command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;\password postgres
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When prompted, enter and confirm the password you've chosen&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the &lt;strong&gt;adminpack&lt;/strong&gt; extension to use with some administration and management tools. The console prints &lt;strong&gt;CREATE EXTENSION&lt;/strong&gt; when successful.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CREATE EXTENSION adminpack;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enter &lt;code&gt;\q&lt;/code&gt; to exit &lt;strong&gt;PSQL&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Allow access to PostgreSQL&lt;/h3&gt;
&lt;p&gt;PostgreSQL only allows access from localhost. We need to change its configuratin to allow remote access.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Edit &lt;strong&gt;pg_hba.conf&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vi /etc/postgresql/9.4/main/pg_hba.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This file contains a very clear information. You can base on this to add your configuration. In this tutorial, I will allow access from all clients by adding this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# allow access from my internal network with md5 password
host    all             10.20.0.0/16             all                     md5
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit &lt;strong&gt;postgresql.conf&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vi /etc/postgresql/9.4/main/postgresql.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Find this &lt;code&gt;#listen_addresses = 'localhost'&lt;/code&gt; &amp;amp; replace with &lt;code&gt;listen_addresses = '*'&lt;/code&gt; to allow access from other servers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Save the file &amp;amp; exit. Then restart &lt;strong&gt;postgresql&lt;/strong&gt; service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo service postgresql restart
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Configure PostgreSQL&lt;/h3&gt;
&lt;p&gt;Below is basic settings for &lt;strong&gt;postgresql.conf&lt;/strong&gt;. Please see &lt;a href="#References"&gt;References&lt;/a&gt; for more detail.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Memory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;shared_buffers = 3GB         # 1/4 system available RAM
work_mem = 10MB                 # up to 1/4(RAM)/max_connections
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Query turning&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;random_page_cost = 1.5          # using 1.5 or 2.0 for SSD
effective_cache_size = 10GB     # 3/4 system available RAM or sum of free &amp;amp;amp; cached value from free -h command
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remember to save the file and restart postgresql service.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/community/tutorials/setting-up-postgres"&gt;How to Set Up PostgreSQL on Google Compute Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://severalnines.com/blog/setting-optimal-environment-postgresql"&gt;Setting Up an Optimal Environment for PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="postgresql"></category><category term="ubuntu"></category><category term="linux"></category><category term="devops"></category></entry></feed>